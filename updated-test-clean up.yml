name: Manual Cleanup Of An Environment

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Enter the PR number:"
        required: false
        type: string
        default: ""
      cluster_name:
        description: "Select the environment:"
        required: true
        type: choice
        options:
          - Dev
          - SIT
          - UAT
          - Pre-Prod

jobs:
  cleanup-pr:
    runs-on: [self-hosted, nonprod-runner]

    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Checkout the code
      - name: Checkout the code
        uses: actions/checkout@v3

      # Step 2: Set role-to-assume based on environment
      - name: Set role-to-assume
        id: set-role
        run: |
          if [[ "${{ github.event.inputs.cluster_name }}" == "Pre-Prod" ]]; then
            echo "role_to_assume=arn:aws:iam::565393028539:role/github-actions-workflow-role" >> $GITHUB_ENV
          else
            echo "role_to_assume=arn:aws:iam::545009843096:role/github-actions-workflow-role" >> $GITHUB_ENV
          fi

      # Step 3: Assume AWS Role using OIDC
      - name: Assume AWS Role using OIDC
        id: assume-role
        uses: Capita-TVL-Web/configure-aws-credentials@main
        with:
          role-to-assume: ${{ env.role_to_assume }}
          aws-region: eu-west-2

      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        run: terraform -chdir=app-infra init

      # ✅ UPDATED: Step 5a: Set workspace name
      - name: Set workspace name
        run: |
          if [[ "${{ github.event.inputs.cluster_name }}" == "Pre-Prod" ]]; then
            workspace_name="pr-preprod-service"
          elif [[ -n "${{ github.event.inputs.pr_number }}" ]]; then
            workspace_name="pr-${{ github.event.inputs.pr_number }}"
          else
            echo "❌ ERROR: PR number is required for environment '${{ github.event.inputs.cluster_name }}'"
            exit 1
          fi
          echo "Using workspace: $workspace_name"
          echo "workspace_name=$workspace_name" >> $GITHUB_ENV

      # ✅ UPDATED: Step 5b: Select Workspace using computed name
      - name: Select Workspace
        run: |
          terraform -chdir=app-infra workspace select "$workspace_name" || echo "Workspace does not exist."

      # Step 6: Destroy Terraform resources (no change needed)
      - name: Destroy Terraform Resources
        run: |
          terraform -chdir=app-infra destroy \
            -auto-approve \
            -var "pr_number=${{ github.event.inputs.pr_number }}" \
            -var "ecs_cluster_name=${{
                github.event.inputs.cluster_name == 'Dev' && 'tvl-web-cluster-dev' ||
                github.event.inputs.cluster_name == 'SIT' && 'tvl-web-cluster-sit' ||
                github.event.inputs.cluster_name == 'UAT' && 'tvl-web-cluster-uat' ||
                github.event.inputs.cluster_name == 'Pre-Prod' && 'tvl-web-cluster-preprod' 
            }}"

      # ✅ UPDATED: Step 7: Delete Workspace using computed name
      - name: Delete Workspace
        run: |
          terraform -chdir=app-infra workspace delete "$workspace_name" -force || echo "Workspace already deleted."
